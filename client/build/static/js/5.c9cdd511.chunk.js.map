{"version":3,"sources":["components/collection-preview/collection-preview.component.jsx","components/collection-overview/collection-overview.component.jsx","components/collection-overview/collection-overview.container.jsx","components/with-spinner/with-spinner.component.jsx","components/collection-item/collection-item.styles.jsx","components/collection-item/collection-item.component.jsx"],"names":["CollectionPreview","title","items","className","toUpperCase","filter","item","index","map","key","id","mapStateToProps","createStructuredSelector","collections","selectShopPreviewCollections","connect","otherProps","isLoading","selectIsCollectionFetching","CollectionOverviewContainer","compose","WithSpinner","CollectionOverview","WrappedComponent","CollectionItemContainer","styled","div","ImageContainer","imageUrl","CollectionFooterContainer","NameContainer","span","dispatch","addCartItem","name","price","inverted","onClick"],"mappings":"2PAiBeA,G,OAXW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,OACtB,yBAAKC,UAAU,sBACX,wBAAIA,UAAU,SAASF,EAAMG,eAC7B,yBAAKD,UAAU,WACVD,EAAMG,QAAO,SAACC,EAAMC,GAAP,OAAiBA,EAAM,KAAGC,KAAI,SAAAF,GAAI,OAC5C,kBAAC,IAAD,CAAgBG,IAAKH,EAAKI,GAAIJ,KAAMA,WCQ9CK,G,OAAkBC,YAAyB,CAC7CC,YAAaC,OAGFC,cAAQJ,EAARI,EAdY,SAAC,GAAD,IAAGF,EAAH,EAAGA,YAAH,OACvB,yBAAKV,UAAU,uBAEPU,EAAYL,KAAI,gBAAGE,EAAH,EAAGA,GAAOM,EAAV,6BACZ,kBAAC,EAAD,eAAmBP,IAAKC,GAAQM,WCL1CL,EAAkBC,YAAyB,CAC7CK,UAAWC,MAGTC,EAA8BC,YAChCL,YAAQJ,GACRU,IAFgCD,CAGlCE,GAEaH,a,oECPAE,IANK,SAAAE,GAAgB,OAAI,gBAAGN,EAAH,EAAGA,UAAcD,EAAjB,oCACpCC,EACI,kBAAC,IAAD,MACA,kBAACM,EAAqBP,M,qhDCLvB,IAAMQ,EAA0BC,IAAOC,IAAV,KA+CvBC,EAAiBF,IAAOC,IAAV,KAMC,qBAAGE,YAGlBC,EAA4BJ,IAAOC,IAAV,KAQzBI,EAAgBL,IAAOM,KAAV,KCxCXhB,gBAAQ,MAJI,SAAAiB,GAAQ,MAAK,CACpCC,YAAa,SAAA3B,GAAI,OAAI0B,EAASC,YAAY3B,QAG/BS,EAlBQ,SAAC,GAA2B,IAAzBT,EAAwB,EAAxBA,KAAM2B,EAAkB,EAAlBA,YACpBC,EAAyB5B,EAAzB4B,KAAMC,EAAmB7B,EAAnB6B,MAAOP,EAAYtB,EAAZsB,SACrB,OACI,kBAACJ,EAAD,KACA,kBAACG,EAAD,CAAgBC,SAAUA,IAC1B,kBAACC,EAAD,KACI,kBAACC,EAAD,KAAgBI,GAChB,0BAAM/B,UAAU,SAASgC,IAE7B,kBAAC,IAAD,CAAcC,UAAQ,EAACC,QAAS,kBAAMJ,EAAY3B,KAAlD","file":"static/js/5.c9cdd511.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport CollectionItem from '../collection-item/collection-item.component'\r\n\r\nimport './collection-preview.styles.scss';\r\n\r\nconst CollectionPreview = ({ title, items }) => (\r\n    <div className='collection-preview'>\r\n        <h1 className='title'>{title.toUpperCase()}</h1>\r\n        <div className='preview'>\r\n            {items.filter((item, index) => index<4).map(item => (\r\n                <CollectionItem key={item.id} item={item}  />\r\n            ))}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default CollectionPreview;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect'; \r\n\r\nimport CollectionPreview from '../collection-preview/collection-preview.component';\r\nimport { selectShopPreviewCollections } from '../../redux/shop/shop.selector';\r\n\r\nimport './collection-overview.styles.scss';\r\n\r\nconst CollectionOverview = ({ collections }) => (\r\n    <div className='collection-overview'>\r\n        {\r\n            collections.map(({ id, ...otherProps }) => (\r\n                <CollectionPreview key={id} {...otherProps} />\r\n            ))\r\n        }\r\n     </div>\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    collections: selectShopPreviewCollections\r\n})\r\n\r\nexport default connect(mapStateToProps)(CollectionOverview);","import { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n import { compose } from 'redux';\r\n\r\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selector';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\nimport CollectionOverview from './collection-overview.component';\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isLoading: selectIsCollectionFetching\r\n});\r\n\r\nconst CollectionOverviewContainer = compose(\r\n    connect(mapStateToProps),\r\n    WithSpinner\r\n)(CollectionOverview);\r\n\r\nexport default CollectionOverviewContainer;","import React from 'react';\r\n\r\nimport Spinner from '../spinner/spinner.component';\r\n\r\nconst WithSpinner = WrappedComponent => ({ isLoading, ...otherProps }) => (\r\n    isLoading ? (\r\n        <Spinner />\r\n    ) : <WrappedComponent {...otherProps} />\r\n);\r\n\r\nexport default WithSpinner;","import styled from 'styled-components';\r\n\r\nexport const CollectionItemContainer = styled.div`\r\n    width: 22vw;\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 350px;\r\n    align-items: center;\r\n    position: relative;\r\n\r\n    button {\r\n        width: 80%;\r\n        opacity: 0.7;\r\n        position: absolute;\r\n        top: 255px;\r\n        display: none;\r\n\r\n        @media screen and (max-width: 800px) {\r\n            display: block;\r\n            opacity: 0.9;\r\n            min-width: unset;\r\n            padding: 0 10px;\r\n        }\r\n    }\r\n\r\n    &:hover {\r\n        .image {\r\n            opacity: 0.8;\r\n        }\r\n        button {\r\n            opacity: 0.85;\r\n            display: flex;\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width:800px) {\r\n        width: 40vw;\r\n\r\n        &:hover {\r\n            .image {\r\n                opacity: unset;\r\n            }\r\n            button {\r\n                opacity: unset;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ImageContainer = styled.div`\r\n    width: 100%;\r\n    height: 95%;\r\n    background-size: cover;\r\n    background-position: center;\r\n    margin-bottom: 5px;\r\n    background-image: url(${({ imageUrl }) => imageUrl})\r\n`;\r\n\r\nexport const CollectionFooterContainer = styled.div`\r\n    width: 100%;\r\n    height: 5%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    font-size: 18px;\r\n`;\r\n\r\nexport const NameContainer = styled.span`\r\n    width: 90%;\r\n    margin-bottom: 15px;\r\n`;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CustomButton from '../custom-button/custom-button.component'\r\nimport { addCartItem } from '../../redux/cart/cart.actions';\r\n\r\nimport { CollectionItemContainer, ImageContainer, NameContainer, CollectionFooterContainer } from './collection-item.styles';\r\n\r\nconst CollectionItem = ({ item, addCartItem }) => {\r\n    const { name, price, imageUrl} = item;\r\n    return(\r\n        <CollectionItemContainer>\r\n        <ImageContainer imageUrl={imageUrl} />\r\n        <CollectionFooterContainer>\r\n            <NameContainer>{name}</NameContainer>\r\n            <span className='price'>{price}</span>\r\n        </CollectionFooterContainer>\r\n        <CustomButton inverted onClick={() => addCartItem(item)}>Add to cart</CustomButton>\r\n    </CollectionItemContainer>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addCartItem: item => dispatch(addCartItem(item))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CollectionItem);"],"sourceRoot":""}
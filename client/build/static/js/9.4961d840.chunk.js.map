{"version":3,"sources":["pages/shop/shop.component.jsx","redux/shop/shop.selector.js"],"names":["CollectionOverviewContainer","lazy","CollectionPageContainer","mapStateToProps","createStructuredSelector","isFetchingCollections","selectIsCollectionFetching","isCollectionsLoaded","selectIsCollectionsLoaded","connect","dispatch","fetchCollectionsStart","match","useEffect","className","fallback","exact","path","component","selectShop","state","shop","selectShopCollections","createSelector","collections","selectShopPreviewCollections","Object","keys","map","selectUrlCollection","collectionUrlParam","isFetching"],"mappings":"4HAAA,2EAWMA,EAA8BC,gBAAK,kBAAM,iCACzCC,EAA0BD,gBAAK,kBAAM,iCAsBrCE,EAAkBC,YAAyB,CAC7CC,sBAAuBC,IACvBC,oBAAqBC,MAOVC,sBAAQN,GAJI,SAAAO,GAAQ,MAAK,CACrCC,sBAAuB,kBAAMD,EAASC,mBAG1BF,EA7BE,SAAC,GAAsC,IAApCE,EAAmC,EAAnCA,sBAAuBC,EAAY,EAAZA,MAKvC,OAJAC,qBAAU,WACNF,MACD,CAACA,IAGA,yBAAKG,UAAU,aACX,kBAAC,WAAD,CAAUC,SAAU,kBAAC,IAAD,OAChB,kBAAC,IAAD,CACIC,OAAK,EACLC,KAAI,UAAKL,EAAMK,MACfC,UAAWlB,IACf,kBAAC,IAAD,CACIiB,KAAI,UAAKL,EAAMK,KAAX,kBACJC,UAAWhB,U,gCC5B/B,oJAEMiB,EAAa,SAAAC,GAAK,OAAIA,EAAMC,MAErBC,EAAwBC,YACjC,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKG,eAGJC,EAA+BF,YACxC,CAACD,IACD,SAAAE,GAAW,OAAIA,EAAcE,OAAOC,KAAKH,GAAaI,KAAI,SAAAD,GAAI,OAC1DH,EAAYG,MACZ,MAGKE,EAAsB,SAAAC,GAAkB,OACrDP,YACI,CAACD,IACD,SAAAE,GAAW,OAAIA,EAAcA,EAAYM,GAAsB,SAGtDxB,EAA6BiB,YACtC,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKU,cAGJvB,EAA4Be,YACrC,CAACJ,IACD,SAAAE,GAAI,QAAMA,EAAKG","file":"static/js/9.4961d840.chunk.js","sourcesContent":["import React, { useEffect, lazy, Suspense } from 'react';\r\nimport { Route} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport Spinner from '../../components/spinner/spinner.component';\r\n\r\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions';\r\n\r\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selector';\r\n\r\nconst CollectionOverviewContainer = lazy(() => import('../../components/collection-overview/collection-overview.container'));\r\nconst CollectionPageContainer = lazy(() => import('../../pages/collection/collection.container'));\r\n\r\nconst ShopPage = ({ fetchCollectionsStart, match }) => {\r\n    useEffect(() => {\r\n        fetchCollectionsStart()\r\n    }, [fetchCollectionsStart]);\r\n\r\n    return (\r\n        <div className='shop-page'>\r\n            <Suspense fallback={<Spinner />}>\r\n                <Route \r\n                    exact \r\n                    path={`${match.path}`} \r\n                    component={CollectionOverviewContainer} />\r\n                <Route \r\n                    path={`${match.path}/:collectionId`} \r\n                    component={CollectionPageContainer} />\r\n            </Suspense>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isFetchingCollections: selectIsCollectionFetching,\r\n    isCollectionsLoaded: selectIsCollectionsLoaded\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\r\n","import { createSelector } from 'reselect';\r\n\r\nconst selectShop = state => state.shop;\r\n\r\nexport const selectShopCollections = createSelector(\r\n    [selectShop],\r\n    shop => shop.collections\r\n);\r\n\r\nexport const selectShopPreviewCollections = createSelector(\r\n    [selectShopCollections],\r\n    collections => collections ? Object.keys(collections).map(keys =>(\r\n        collections[keys]\r\n    )): []\r\n);\r\n\r\nexport const selectUrlCollection = collectionUrlParam =>\r\ncreateSelector(\r\n    [selectShopCollections],\r\n    collections => collections ? collections[collectionUrlParam] : null\r\n);\r\n\r\nexport const selectIsCollectionFetching = createSelector(\r\n    [selectShop],\r\n    shop => shop.isFetching\r\n);\r\n\r\nexport const selectIsCollectionsLoaded = createSelector(\r\n    [selectShop],\r\n    shop => !!shop.collections\r\n);\r\n"],"sourceRoot":""}
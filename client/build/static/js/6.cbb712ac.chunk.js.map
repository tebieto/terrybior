{"version":3,"sources":["pages/collection/collection.component.jsx","pages/collection/collection.container.jsx","components/with-spinner/with-spinner.component.jsx","components/collection-item/collection-item.styles.jsx","components/collection-item/collection-item.component.jsx"],"names":["connect","state","ownProps","collection","selectUrlCollection","match","params","collectionId","title","items","className","map","item","key","id","mapStateToProps","createStructuredSelector","isLoading","selectIsCollectionsLoaded","CollectionPageContainer","compose","WithSpinner","CollectionPage","WrappedComponent","otherProps","CollectionItemContainer","styled","div","ImageContainer","imageUrl","CollectionFooterContainer","NameContainer","span","dispatch","addCartItem","name","price","inverted","onClick"],"mappings":"6MA6BeA,G,OAAAA,aAJS,SAACC,EAAOC,GAAR,MAAsB,CAC1CC,WAAYC,YAAoBF,EAASG,MAAMC,OAAOC,aAA1CH,CAAwDH,MAGzDD,EArBQ,SAAC,GAAoB,IAAlBG,EAAiB,EAAjBA,WACdK,EAAiBL,EAAjBK,MAAOC,EAAUN,EAAVM,MAEf,OACI,yBAAKC,UAAU,mBACX,wBAAIA,UAAU,SAASF,GACvB,yBAAKE,UAAU,SAEPD,EAAME,KAAI,SAAAC,GAAI,OACV,kBAAC,IAAD,CAAgBC,IAAKD,EAAKE,GAAIF,KAAMA,a,gBCTtDG,EAAkBC,YAAyB,CAC7CC,UAAW,SAAAhB,GAAK,OAAKiB,YAA0BjB,MAG7CkB,EAA0BC,YAC5BpB,YAAQe,GACRM,IAF4BD,CAG9BE,GAEaH,a,oECPAE,IANK,SAAAE,GAAgB,OAAI,gBAAGN,EAAH,EAAGA,UAAcO,EAAjB,oCACpCP,EACI,kBAAC,IAAD,MACA,kBAACM,EAAqBC,M,qhDCLvB,IAAMC,EAA0BC,IAAOC,IAAV,KA+CvBC,EAAiBF,IAAOC,IAAV,KAMC,qBAAGE,YAGlBC,EAA4BJ,IAAOC,IAAV,KAQzBI,EAAgBL,IAAOM,KAAV,KCxCXhC,gBAAQ,MAJI,SAAAiC,GAAQ,MAAK,CACpCC,YAAa,SAAAtB,GAAI,OAAIqB,EAASC,YAAYtB,QAG/BZ,EAlBQ,SAAC,GAA2B,IAAzBY,EAAwB,EAAxBA,KAAMsB,EAAkB,EAAlBA,YACpBC,EAAyBvB,EAAzBuB,KAAMC,EAAmBxB,EAAnBwB,MAAOP,EAAYjB,EAAZiB,SACrB,OACI,kBAACJ,EAAD,KACA,kBAACG,EAAD,CAAgBC,SAAUA,IAC1B,kBAACC,EAAD,KACI,kBAACC,EAAD,KAAgBI,GAChB,0BAAMzB,UAAU,SAAS0B,IAE7B,kBAAC,IAAD,CAAcC,UAAQ,EAACC,QAAS,kBAAMJ,EAAYtB,KAAlD","file":"static/js/6.cbb712ac.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { selectUrlCollection } from '../../redux/shop/shop.selector';\r\nimport CollectionItem from '../../components/collection-item/collection-item.component';\r\n\r\nimport './collection.styles.scss';\r\nimport { connect } from 'react-redux';\r\n\r\nconst CollectionPage = ({ collection }) => {\r\n    const { title, items } = collection;\r\n    \r\n    return (\r\n        <div className='collection-page'>\r\n            <h2 className='title'>{title}</h2>\r\n            <div className='items'>\r\n                {\r\n                    items.map(item => (\r\n                        <CollectionItem key={item.id} item={item} />\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    collection: selectUrlCollection(ownProps.match.params.collectionId)(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(CollectionPage);","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport CollectionPage from './collection.component';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop.selector';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isLoading: state => !selectIsCollectionsLoaded(state)\r\n});\r\n\r\nconst CollectionPageContainer = compose(\r\n    connect(mapStateToProps),\r\n    WithSpinner\r\n)(CollectionPage);\r\n\r\nexport default CollectionPageContainer;","import React from 'react';\r\n\r\nimport Spinner from '../spinner/spinner.component';\r\n\r\nconst WithSpinner = WrappedComponent => ({ isLoading, ...otherProps }) => (\r\n    isLoading ? (\r\n        <Spinner />\r\n    ) : <WrappedComponent {...otherProps} />\r\n);\r\n\r\nexport default WithSpinner;","import styled from 'styled-components';\r\n\r\nexport const CollectionItemContainer = styled.div`\r\n    width: 22vw;\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 350px;\r\n    align-items: center;\r\n    position: relative;\r\n\r\n    button {\r\n        width: 80%;\r\n        opacity: 0.7;\r\n        position: absolute;\r\n        top: 255px;\r\n        display: none;\r\n\r\n        @media screen and (max-width: 800px) {\r\n            display: block;\r\n            opacity: 0.9;\r\n            min-width: unset;\r\n            padding: 0 10px;\r\n        }\r\n    }\r\n\r\n    &:hover {\r\n        .image {\r\n            opacity: 0.8;\r\n        }\r\n        button {\r\n            opacity: 0.85;\r\n            display: flex;\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width:800px) {\r\n        width: 40vw;\r\n\r\n        &:hover {\r\n            .image {\r\n                opacity: unset;\r\n            }\r\n            button {\r\n                opacity: unset;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ImageContainer = styled.div`\r\n    width: 100%;\r\n    height: 95%;\r\n    background-size: cover;\r\n    background-position: center;\r\n    margin-bottom: 5px;\r\n    background-image: url(${({ imageUrl }) => imageUrl})\r\n`;\r\n\r\nexport const CollectionFooterContainer = styled.div`\r\n    width: 100%;\r\n    height: 5%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    font-size: 18px;\r\n`;\r\n\r\nexport const NameContainer = styled.span`\r\n    width: 90%;\r\n    margin-bottom: 15px;\r\n`;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CustomButton from '../custom-button/custom-button.component'\r\nimport { addCartItem } from '../../redux/cart/cart.actions';\r\n\r\nimport { CollectionItemContainer, ImageContainer, NameContainer, CollectionFooterContainer } from './collection-item.styles';\r\n\r\nconst CollectionItem = ({ item, addCartItem }) => {\r\n    const { name, price, imageUrl} = item;\r\n    return(\r\n        <CollectionItemContainer>\r\n        <ImageContainer imageUrl={imageUrl} />\r\n        <CollectionFooterContainer>\r\n            <NameContainer>{name}</NameContainer>\r\n            <span className='price'>{price}</span>\r\n        </CollectionFooterContainer>\r\n        <CustomButton inverted onClick={() => addCartItem(item)}>Add to cart</CustomButton>\r\n    </CollectionItemContainer>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addCartItem: item => dispatch(addCartItem(item))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CollectionItem);"],"sourceRoot":""}
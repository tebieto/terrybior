{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/form-input/form-input.component.jsx","components/sign-in/sign-in.components.jsx","components/sign-up/sign-up.component.jsx","pages/sign-in-and-sign-up/sign-in-and-sign-up.component.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","FormInput","handleChange","label","otherProps","className","onChange","connect","dispatch","googleSignInStart","emailSignInStart","emailAndPassword","useState","email","password","userCredentials","setCredentials","handleSubmit","event","a","preventDefault","target","name","onSubmit","type","required","isGoogleSignIn","onClick","signUpStart","userData","displayName","confirmPassword","alert","error","console","log","message","SignInAndSignUp"],"mappings":"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","file":"static/js/4.04cf384f.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react';\r\n\r\nimport './form-input.styles.scss';\r\n\r\nconst FormInput = ({ handleChange, label, ...otherProps }) => (\r\n    <div className=\"group\">\r\n        <input className='form-input' onChange={handleChange} {...otherProps} />\r\n        {\r\n            label ?\r\n            (<label className={`${otherProps.value.length? 'shrink' : ''} form-input-label`}>\r\n                {label}\r\n            </label>)\r\n            : null\r\n        }\r\n    </div>\r\n);\r\n\r\nexport default FormInput;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport CustomButton from '../../components/custom-button/custom-button.component';\r\n\r\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.action';\r\n\r\nimport './sign-in.styles.scss';\r\n\r\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\r\n    const [ userCredentials, setCredentials ] = useState({ email: '', password: ''});\r\n   \r\n    const { email, password } = userCredentials;\r\n    \r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n        emailSignInStart({email, password})\r\n    }\r\n\r\n    const handleChange = event => {\r\n        const { value, name } = event.target;\r\n\r\n        setCredentials({...userCredentials, [name]: value})\r\n    }\r\n    return (\r\n        <div className='sign-in'>\r\n            <h2 className='title'>I already have an account</h2>\r\n            <span>Signin with your email and password</span>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <FormInput \r\n                    name='email' \r\n                    type='email' \r\n                    value={email}\r\n                    handleChange={handleChange}\r\n                    required\r\n                    label='Email' \r\n                />\r\n                <FormInput\r\n                    name='password' \r\n                    type='password' \r\n                    value={password}\r\n                    handleChange={handleChange}\r\n                    label='Password'\r\n                    required \r\n                />\r\n                <div className='buttons'>\r\n                <CustomButton type='submit'>Sign in</CustomButton>\r\n                <CustomButton type='button' isGoogleSignIn onClick={googleSignInStart}>Sign in with Google</CustomButton>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: emailAndPassword => dispatch(emailSignInStart(emailAndPassword))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\n\r\nimport { signUpStart } from '../../redux/user/user.action';\r\n\r\nimport './sign-up.styles.scss';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nconst SignUp = ({ signUpStart }) => {\r\n    const [userCredentials, setCredentials] = useState({ displayName: '', email: '', password: '', confirmPassword: '' });\r\n\r\n    const {displayName, email, password, confirmPassword } = userCredentials;\r\n    \r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if(password !== confirmPassword) {\r\n            alert(\"Passwords don't match\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            signUpStart(userCredentials)\r\n            setCredentials({ displayName: '', email: '', password: '', confirmPassword: '' })\r\n        } catch(error) {\r\n            console.log('An error occured', error.message)\r\n        }\r\n    }\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target;\r\n\r\n        setCredentials({ ...userCredentials, [name]: value });\r\n    }\r\n\r\n    return (\r\n        <div className='sign-up'>\r\n            <h2 className='title'>I do not have an account</h2>\r\n            <span>Sign up with your email and password</span>\r\n            \r\n            <form className='sign-up-form' onSubmit={handleSubmit}>\r\n                <FormInput\r\n                    type='text'\r\n                    name='displayName'\r\n                    value={displayName}\r\n                    label='Display Name'\r\n                    handleChange={handleChange}\r\n                    required\r\n                />\r\n                <FormInput\r\n                    type='email'\r\n                    name='email'\r\n                    value={email}\r\n                    label='Email'\r\n                    handleChange={handleChange}\r\n                    required\r\n                />\r\n                <FormInput\r\n                    type='password'\r\n                    name='password'\r\n                    value={password}\r\n                    label='Password'\r\n                    handleChange={handleChange}\r\n                    required\r\n                />\r\n                <FormInput\r\n                    type='password'\r\n                    name='confirmPassword'\r\n                    value={confirmPassword}\r\n                    label='Confirm password'\r\n                    handleChange={handleChange}\r\n                    required\r\n                />\r\n                <CustomButton type='submit'>Sign up</CustomButton>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signUpStart: userData => dispatch(signUpStart(userData))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);","import React from 'react';\r\n\r\nimport SignIn from '../../components/sign-in/sign-in.components';\r\nimport SignUp from '../../components/sign-up/sign-up.component';\r\nimport './sign-in-and-sign-up.styles.scss';\r\n\r\nconst SignInAndSignUp = () => (\r\n    <div className='sign-in-and-sign-up'>\r\n       <SignIn />\r\n       <SignUp />\r\n    </div>\r\n);\r\n\r\nexport default SignInAndSignUp;"],"sourceRoot":""}